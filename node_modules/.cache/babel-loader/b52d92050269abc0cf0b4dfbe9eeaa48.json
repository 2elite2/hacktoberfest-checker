{"ast":null,"code":"import _classCallCheck from \"/Users/ianjenkins/Code/hacktoberfest-checker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/Users/ianjenkins/Code/hacktoberfest-checker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/ianjenkins/Code/hacktoberfest-checker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/ianjenkins/Code/hacktoberfest-checker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/ianjenkins/Code/hacktoberfest-checker/src/pages/User/components/PullRequests/index.js\";\nimport React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport LoadingIcon from './LoadingIcon';\nimport ErrorText from './ErrorText';\nimport pullRequestAmount from './pullRequestAmount';\nimport ShareButtons from './ShareButtons';\nimport UserInfo from './UserInfo';\nimport PullRequest from './PullRequest';\nimport IssuesLink from './IssuesLink';\nimport MeLinkInfo from './MeLinkInfo';\n\nvar PullRequests =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PullRequests, _Component);\n\n  function PullRequests() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, PullRequests);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(PullRequests)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      loading: true,\n      data: null,\n      error: null\n    };\n\n    _this.componentDidMount = function () {\n      _this.storeUsernameAsMe();\n\n      _this.fetchPullRequests();\n    };\n\n    _this.componentDidUpdate = function (prevProps) {\n      if (prevProps.username === _this.props.username) return;\n\n      _this.fetchPullRequests();\n    };\n\n    _this.storeUsernameAsMe = function () {\n      var username = _this.props.username;\n\n      if (localStorage.getItem('myGithub')) {\n        return;\n      }\n\n      localStorage.setItem('myGithub', username);\n    };\n\n    _this.fetchPullRequests = function () {\n      var username = _this.props.username;\n      var apiUrl = process.env.REACT_APP_API_URL;\n\n      _this.setState({\n        loading: true\n      });\n\n      fetch(\"\".concat(apiUrl, \"/prs?username=\").concat(username), {\n        method: 'GET'\n      }).then(function (response) {\n        return response.json();\n      }).then(function (pullRequests) {\n        return _this.setState({\n          loading: false,\n          data: pullRequests\n        });\n      }).catch(function (error) {\n        return _this.setState({\n          loading: false,\n          error: error\n        });\n      });\n    };\n\n    _this.getErrorMessage = function () {\n      var _this$state = _this.state,\n          data = _this$state.data,\n          error = _this$state.error;\n\n      if (error && error.description) {\n        return error.error_description;\n      }\n\n      if (data && data.error_description) {\n        return data.error_description;\n      }\n\n      return \"Couldn't find any data or we hit an error, err try again?\";\n    };\n\n    _this.render = function () {\n      var username = _this.props.username;\n      var _this$state2 = _this.state,\n          loading = _this$state2.loading,\n          data = _this$state2.data,\n          error = _this$state2.error;\n\n      if (loading || 1 == 1) {\n        return React.createElement(LoadingIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        });\n      }\n\n      if (error || data.error_description) {\n        return React.createElement(ErrorText, {\n          errorMessage: _this.getErrorMessage(),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        });\n      }\n\n      var isComplete = data.prs.length >= pullRequestAmount;\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"text-center text-white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(ShareButtons, {\n        username: username,\n        pullRequestCount: data.prs.length,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }), React.createElement(UserInfo, {\n        username: username,\n        userImage: data.userImage,\n        pullRequestCount: data.prs.length,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"rounded mx-auto shadow overflow-hidden w-5/6 lg:w-1/2 mb-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, data.prs.length > 0 && data.prs.map(function (pullRequest, i) {\n        return React.createElement(PullRequest, {\n          pullRequest: pullRequest,\n          key: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113\n          },\n          __self: this\n        });\n      })), !isComplete && React.createElement(IssuesLink, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }), React.createElement(MeLinkInfo, {\n        username: username,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }));\n    };\n\n    return _this;\n  }\n\n  return PullRequests;\n}(Component);\n\nPullRequests.defaultProps = {\n  username: PropTypes.string.isRequired\n};\nexport { PullRequests as default };","map":{"version":3,"sources":["/Users/ianjenkins/Code/hacktoberfest-checker/src/pages/User/components/PullRequests/index.js"],"names":["React","Component","Fragment","PropTypes","LoadingIcon","ErrorText","pullRequestAmount","ShareButtons","UserInfo","PullRequest","IssuesLink","MeLinkInfo","PullRequests","state","loading","data","error","componentDidMount","storeUsernameAsMe","fetchPullRequests","componentDidUpdate","prevProps","username","props","localStorage","getItem","setItem","apiUrl","process","env","REACT_APP_API_URL","setState","fetch","method","then","response","json","pullRequests","catch","getErrorMessage","description","error_description","render","isComplete","prs","length","userImage","map","pullRequest","i","defaultProps","string","isRequired"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport LoadingIcon from './LoadingIcon';\nimport ErrorText from './ErrorText';\nimport pullRequestAmount from './pullRequestAmount';\nimport ShareButtons from './ShareButtons';\nimport UserInfo from './UserInfo';\nimport PullRequest from './PullRequest';\nimport IssuesLink from './IssuesLink';\nimport MeLinkInfo from './MeLinkInfo';\n\nexport default class PullRequests extends Component {\n  static defaultProps = {\n    username: PropTypes.string.isRequired\n  };\n\n  state = {\n    loading: true,\n    data: null,\n    error: null\n  };\n\n  componentDidMount = () => {\n    this.storeUsernameAsMe();\n    this.fetchPullRequests();\n  };\n\n  componentDidUpdate = prevProps => {\n    if (prevProps.username === this.props.username) return;\n    this.fetchPullRequests();\n  };\n\n  storeUsernameAsMe = () => {\n    const username = this.props.username;\n\n    if (localStorage.getItem('myGithub')) {\n      return;\n    }\n\n    localStorage.setItem('myGithub', username);\n  };\n\n  fetchPullRequests = () => {\n    const username = this.props.username;\n    const apiUrl = process.env.REACT_APP_API_URL;\n\n    this.setState({\n      loading: true\n    });\n\n    fetch(`${apiUrl}/prs?username=${username}`, {\n      method: 'GET'\n    })\n      .then(response => response.json())\n      .then(pullRequests =>\n        this.setState({\n          loading: false,\n          data: pullRequests\n        })\n      )\n      .catch(error =>\n        this.setState({\n          loading: false,\n          error\n        })\n      );\n  };\n\n  getErrorMessage = () => {\n    const { data, error } = this.state;\n\n    if (error && error.description) {\n      return error.error_description;\n    }\n\n    if (data && data.error_description) {\n      return data.error_description;\n    }\n\n    return \"Couldn't find any data or we hit an error, err try again?\";\n  };\n\n  render = () => {\n    const username = this.props.username;\n    const { loading, data, error } = this.state;\n\n    if (loading || 1==1) {\n      return <LoadingIcon />;\n    }\n\n    if (error || data.error_description) {\n      return <ErrorText errorMessage={this.getErrorMessage()} />;\n    }\n\n    const isComplete = data.prs.length >= pullRequestAmount;\n\n    return (\n      <Fragment>\n        <div className=\"text-center text-white\">\n          <ShareButtons\n            username={username}\n            pullRequestCount={data.prs.length}\n          />\n          <UserInfo\n            username={username}\n            userImage={data.userImage}\n            pullRequestCount={data.prs.length}\n          />\n        </div>\n        <div className=\"rounded mx-auto shadow overflow-hidden w-5/6 lg:w-1/2 mb-4\">\n          {data.prs.length > 0 &&\n            data.prs.map((pullRequest, i) => (\n              <PullRequest pullRequest={pullRequest} key={i} />\n            ))}\n        </div>\n        {!isComplete && <IssuesLink />}\n        <MeLinkInfo username={username} />\n      </Fragment>\n    );\n  };\n}\n"]},"metadata":{},"sourceType":"module"}